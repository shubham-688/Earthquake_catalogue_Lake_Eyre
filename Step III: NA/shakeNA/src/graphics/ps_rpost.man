RPOSTPAK version 2.1  April 1997     
================================

POSTSCRIPT GRAPHICS SOFTWARE                 
B.L.N. Kennett
Seismology Group, RSES


INTRODUCTION
------------

This document provides brief descriptions of the Postscript graphics
routines developed at the Research School of Earth Sciences, 
Australian National University.

Routines are organized into four main types

        a) PLOTPAK - basic routines implementing CALCOMP-style calls which
generate device specific code, either as files or as subroutine calls.

        b) TYPSET - routines for plotting with fancy fonts which call PLOTPAK
routines.

        c) POSTSCRIPT functions - routines which provide direct access to
Postscript commands

        d) EXTENSION routines - routines providing extra capability based on plotpak 
but not fully compatible with all features e.g. rotation.

These routines were developed from routines using HPGL, some calling sequences
therefore include redundant arguments.

Many of the routines have X-window equivalents which can be used for
producing rapid preview in the notes these are indicated with (X).

The library sets up a standard set of 31 pens, which are available by number

		1 = thick line (black)
		2 = thin line (black)
		3 = red
		4 = blue
		5 = green
		6 = yellow
		7 = orange
		8 = tan
		9 = beige
		10 = purple
		11 = pink
		12 = lavender
		13 = light green
		14 = light blue
		15 = light grey

Pens 16-31 give a set of 16 linear grey levels starting with black (pen16) and ending 
with white (pen31)

The following Postscript fonts are accessible
             Helvetica  (default)
             Helvetica-Oblique
             Helvetica-Bold
             Helvetica-BoldOblique
             Times-Roman
             Times-Italic
             Times-Bold
             Times-BoldItalic
             Symbol
             Palatino-Roman
             Palatino-Italic
             Palatino-Bold
             Palatino-BoldItalic
             Lucida Sans
             LucidaSans-Italic
             LucidaSans-Bold
             LucidaSans-BoldItalic


OUTPUT FILE CONSTRUCTION
------------------------

        Graphics output using these routines may be generated by

        i) LINKING: include the 
	
		   ps_rpost.o 
		    
                    object file in f77 or ld step

        ii) PLOTTING: To send a file of plot instructions 
	              to laser printer
	    
	    lpr  -PPrinter  filename
	    
Available printers are:
       lp (default) - SUN printer (400 dpi)
       gfdlw           - Laserwriter (600 dpi) fast printer with ethernet access
       zisin           - Laserwriter (600 dpi) slowerprinter with 
                              appletalk network access
       cjet            - Colour Inkjet (360 dpi) 
                              high quality output to coated paper or transaparencies
       turner          - Colour laserprinter (600 dpi)
                              lpt command allows access to trays.

 
ROUTINE DESCRIPTIONS
--------------------
Note in the following descriptions those variables beginning with letters
I,J,K,L,M,N are INTEGER*4 parameters; all others are REAL*4 unless otherwise
noted.


A. PLOT INITIALIZATION AND TERMINATION
======================================

       All graphics progams will require calls to HPLOTS to initialize 
and terminate plotting.


HPLOTS (X)    call hplots (IT, IRO, LPL, ILS)
------
        FUNCTION: Initializes and terminates plotting. 
                  Sets up Postscript preamble

        ARGUMENTS: IT - specifies initialization or termination of plotting. 
                       > 0 for initialization 
                       = 0 for termination 
                   IRO - axes conventions.   
                         = 0 takes origin as bottom left corner, X axis along 
                             bottom side, and Y axis up left side 
                         <> 0 takes origin as top left corner, X axis down left 
                              side, and Y axis along top side    
                   LPL - logical unit number of output instruction file.
                         Note that postscript (laser writer) plotfiles must be 
                         opened explicitly prior to initialization by HPLOTS.
                   ILS - internal parameter settings (varies for different
                         devices).
                       ii) Apple laser writer/screen     
                         = 0 direct mapping (A4)
                         = 1 A3 to A4 reduction
                         = 2 1.0 cm = 20 points (1 point = 1/72 inch on paper)

        COMMENTS: The entire package is built around the concept of plotting
        onto an A4 or A3 page normally oriented with long side along the 
        x-axis. 
                Numerous problems may be expected if either of the HPLOTS calls 
        is missing.

NEWPAGE     call newpage
------
        FUNCTION: terminates a page, increments page counter 
                  and starts new page.
 
NEWPLOT     call newplot
------
        FUNCTION: terminates a plotobject, increments object counter 
                  continues on same page. 


B. ROUTINES to use Postscript basic commands
============================================

QROTATE      call qrotate(ang)
------
        FUNCTION: rotates subsequent plot using Postscript rotate command

        ARGUMENTS: ANG- angle of rotation in degrees.

QTRANSLATE   call qtransl(ptx,pty)
---------
        FUNCTION: translates subsequent plot using Postscript translate command

        ARGUMENTS: PTX, PTY - x, y increments in points (72 points = 1 inch)

QSCALE       call qscale(sc)
------
        FUNCTION: scales subsequent plot using Postscript scale command

        ARGUMENTS: sc - scale factor

QSETLW       call qsetlw(thw)
------
        FUNCTION: sets linewidth using Postscript setlinewidth command

        ARGUMENTS: THW  - line thickness in points (72 points = 1 inch)


C. ROUTINES affecting COLOUR and DRAWING STYLE
==============================================

DASHLN (X)    call dashln (LDASH)
------
        FUNCTION: Select style of plotted line segment.

        ARGUMENTS: LDASH - line style.
                        < 0 solid line
                        = 0 dots at plot call points (HP only, otherwise 
                            equivalent to 1)
                        = 1 dotted line
                        = 2 half dash line
                        = 3 long dash line
                        = 4 chain dotted line
                        = 5 long and short dashes
                        = 6 long and two short dashes

        COMMENTS: Routines affected by DASHLN include
        PLOT, PLOTU

THICKLIN    call thicklin(ithw)
--------
        FUNCTION: sets linewidth using preset values

        ARGUMENTS: ITHW  - use linewidth commands
                   = 1   - th1 : 0.25 pts
                   = 2   - th2 : 0.50 pts
                   = 3   - th3 : 0.75 pts
                   = 4   - th4 : 1.00 pts
                   = 5   - th5 : 1.25 pts
                   = 6   - th6 : 1.50 pts
                   = 7   - th7 : 2.00 pts
                   = 8   - th8 : 2.50 pts

PEN (X)   call pen (IPEN,ITHICK)
---- 
        FUNCTION: Changes selected pen.

        ARGUMENTS: IPEN - pen selection.
                      = 1,15 selects pens #1-15 
	                in Postcript colour 
                      = 16-31 set of linear grey levels 
                   ITHICK - line thickness
                      > 1  progressively thicker lines
                      < 1  progressively thinner lines

COLINT (X)   call colint
------
        FUNCTION: Sets up pen values for pens 1-31
                  Normally only used internally, but can be called to reset pens

LDCOLOR (X)   call ldcolor(lunit)
------
        FUNCTION: loads a colour map (usually for pens>32)

        ARGUMENT: LUNIT - fortrqan unit number


RGBCOL   call rgbcol (IPEN,IR,IG,IB)
------
        FUNCTION: defines a pen using rgb coding (additive)

        ARGUMENTS: IPEN - pen selection.
                   IR,IG,IB - integers less than 255 representing 
                              contributions of red, green and blue

HSBCOL   call hsbcol (IPEN,HC,SC,BC)
------
        FUNCTION: defines a pen using Hue, Saturation and brightness

        ARGUMENTS: IPEN - pen selection.
                   HC,SC,BC - real variables < 1.0 
                   HC = 0 red, 1/3 green, 2/3 blue, 1 red
                   SC - saturation level
                   BC - controls admixture of white

GREYTON   call greyton (IPEN,GC)
-------
        FUNCTION: defines a pen using rgb coding (additive)

        ARGUMENTS: IPEN - pen selection.
                   GC - real variable 0.0 (black) < GC < 1.0 (white)
                        lighter greys as GC increases


D. BASIC PLOT ROUTINES
======================

PLOT (X)   call plot (X, Y, I)
----
        FUNCTION: Moves pen to specified position on paper.
    
        ARGUMENTS: X - X coordinate (in cm)
                   Y - Y coordinate (in cm)
                   I - reference parameter.
                        < 0 moves relative to present position
                        > 0 moves relative to origin defined by IRO 
                        +/- 2 pen is down during the move
                        +/- 3 pen is up during the move 


PLOTU (X)  call plotu (X, Y, I)
-----
        FUNCTION: As above but with coordinates in user specified units.

        ARGUMENTS: See above.



SCALE (X)  call scale (XMIN, XMAX, PX1, PX2, YMIN, YMAX, PY1, PY2)
-----             
        FUNCTION: Determines parameters for transformation from user to plotter
        coordinates.

        ARGUMENTS: XMIN, XMAX, YMIN, YMAX - user unit coordinates. 
                   PX1, PX2, PY1, PY2 - plotter unit coordinates.

        COMMENTS: Must be called before using PLOTU.


E. CIRCLES AND SYMBOLS
======================

CIRCLE (X)  call circle (RADIUS, NSIDES)
------
        FUNCTION: Draws regular polygon with NSIDES centered at current pen 
        location.

        ARGUMENTS: RADIUS - distance from centre to vertex in cm.
                   NSIDES - number of sides.
                        = 0 gives smoothest circle

        COMMENTS: NSIDES = 0 generates large volume of output


CSYMBL (X) CALL CSYMBL (X, Y,I, SIZE, INT)
------
        FUNCTION: Draws a centered symbol around a specified point.            
                     
        ARGUMENTS: X, Y - user coordinates of point.
                   I - reference parameter for pen movement prior to symbol 
                       plotting (as in PLOT command).
                        < 0 moves relative to present position
                        > 0 moves relative to origin defined by IRO 
                        +/- 2 pen is down during the move
                        +/- 3 pen is up during the move 
                   SIZE - height of symbol in cm for INT = 1 - 10, 
                          and 0.75 * SIZE is distance from 
                          centre to vertices for INT = 11- 17.

                   INT - desired symbol.
                        = 1 O
                        = 2 X
                        = 3 *
                        = 4 +
                        = 5 #
                        = 6 $
                        = 7 @ 
                        = 8 8
                        = 9 H
                        = 10 Z
                        = 11 circle
                        = 12 triangle
                        = 13 square
                        = 14 pentagon
                        = 15 hexagon
                        = 16 heptagon
                        = 17 octagon

                    IF INT > 20 then symbols follow INT-10 with 
                                fill in current colour

        COMMENTS: Note that INT = 1 - 10 may not be perfectly centered 


F. SIMPLE ANNOTATION - base font (Helvetica)
============================================

NUMBER (X) call number (X, Y, SIZE, RN, ANGL, NSF)
------
        FUNCTION: Plots a real number.

        ARGUMENTS: X, Y - starting point in plotter coordinates.
                   SIZE - absolute value is height of character(s).
                   ANGL - string orientation (in degrees) relative to X axis. 
                   RN - real number to be plotted.
                   NSF - integer format parameter.
                        < 0 RN is plotted as an integer in In format (NSF = -n)
                        > 0 NSF is a string of 2-3 integers (nlm) specifying 
                            Fnl.m format  

        COMMENTS: Examples NSF = -6 gives format I6
                           NSF = 128 gives format F12.8


SYMBOL (X)  call symbol (X, Y, SIZE, STRING, ANGL, NCHAR)
------
        FUNCTION: Plots ASCII character string. 
                   
        ARGUMENTS: X, Y - starting point in plotter coordinates.
                   SIZE - absolute value is height of character(s).
                        < 0 (X, Y) is location in cm relative to current pen 
                            location
                        > 0 (X, Y) is in absolute plotter units
                   STRING - character string to be plotted.
                   ANGL - string orientation (in degrees) relative to X axis.
                   NCHAR - number of characters to be plotted (maximum = 77).

SYMBU (X)  call symbu (X, Y, SIZE, STRING, ANGL, NCHAR)
-----
        FUNCTION: As above but with coordinates in user specified units.

        ARGUMENTS: See above.


G. ROUTINES FOR SHAPES
======================


FILLTYP (X)  call filltyp (IT,SPAC,IAN) 
-------
        FUNCTION: Specifies fill type for shading.

        ARGUMENTS: IT - dummy
                   SPAC - between 0 and 1  interpreted as graylevel
                   IAN - dummy

SHADRT (X)   call shadrt (XI, YI)
------
        FUNCTION: Fills a rectangle with user-defined increments at the current
        pen location..

        ARGUMENTS: XI - x coordinate increment.
                   YI - y coordinate increment.

        COMMENTS: Requires prior call to FILLTYP 


EDGERT (X)   call edgert (XI, YI)
------
        FUNCTION: Draws an edge around a rectangle in increments from current 
        point.

        ARGUMENTS: XI - x coordinate increment.
                   YI - y coordinate increment.

FILLPOLY    call fillpoly (px,py,n)
--------
        FUNCTION: Fills a polygon specified by successive points px(j),py(j)

        ARGUMENTS: px,py - coordinate arrays 
                   n - number of points to connect (< 2000).

EDGPOLY    call edgpoly (px,py,n)
--------
        FUNCTION: Outlines a polygon specified by successive points px(j),py(j)

        ARGUMENTS: px,py - coordinate arrays 
                   n - number of points to connect (< 2000).



H. ROUTINES FOR PIXEL IMAGES
============================

For all these routines the array arr is supposed to be organised so that
the columns proceed down the page.

PIMAG4   call pimag4 (xori,yori,xxl,yyl,nsxx,nsyy,arr,
------                   nth11,nth22,sth11,sth22)
           
	   pimag4         bitmap image plotting in postscript 
                          (4 bit representation)

                          xori - x origin for bit image
                          yori - y origin for bit image
                          xxl  - x dimension of block
                          yyl  - y dimension of block
                          arr(nsxx,nsyy) - data array
                          nth11,nth22  - range of levels (1,16)
                          sth11,sth22  - corresponding array values
  
       n.b.   grey scale inverted i.e. 0 - white 16 - black

PIMAG8   call pimag8 (xori,yori,xxl,yyl,nsxx,nsyy,arr,
------                   nth11,nth22,sth11,sth22)

            pimag8         bitmap image plotting in postscript 
                           (8 bit representation)

                           xori - x origin for bit image
                           yori - y origin for bit image
                           xxl  - x dimension of block
                           yyl  - y dimension of block
                           arr(nsxx,nsyy) - data array
                           nth11,nth22  - range of levels (1,256)
                           sth11,sth22  - corresponding array values
   
        n.b.   grey scale inverted i.e. 1 - white 256 - black

PIMASK    call pimask (xori,yori,xxl,yyl,nsxx,nsyy,arr,
------                   nk11,nk22,nk33,sk11,sk22,kpen1)
            
            pimask         bitmap imagemask plotting in postscript 
                           (1 bit representation)

                           xori - x origin for bit image
                           yori - y origin for bit image
                           xxl  - x dimension of block
                           yyl  - y dimension of block
                           arr(nsxx,nsyy) - data array
                           nk11  - mask on
                           nk22  - mask on ) alternate
                           nk33  - mask off) rows
                           sth11,sth22  - limits for band 
        nk1,nk2,nk3 must all lie in 1,16 and 16-(nk.-1) will
        be interpreted as 4 1bit operations in terms of the mask
   
        n.b.   grey scale inverted i.e. 0 - white 16 - black

PIMCOL8   call pimcol8 (xori,yori,xxl,yyl,nsxx,nsyy,arr,
------                   nth11,nth22,sth11,sth22)

            pimcol8         colour bitmap image plotting in postscript 
                           (8 bit representation)

                           xori - x origin for bit image
                           yori - y origin for bit image
                           xxl  - x dimension of block
                           yyl  - y dimension of block
                           arr(nsxx,nsyy) - data array
                           nth11,nth22  - range of levels (1,256)
                           sth11,sth22  - corresponding array values
   
        n.b.   uses Postscript colour image command with pre-assigned
               colours, use ldcolor or equivalent to set up colours


PICOL   call pimag8 (xori,yori,xxl,yyl,nsxx,nsyy,arr,
------                   nth11,nth22,sth11,sth22)

            picol          colour image plotting in postscript 

                           xori - x origin for bit image
                           yori - y origin for bit image
                           xxl  - x dimension of block
                           yyl  - y dimension of block
                           arr(nsxx,nsyy) - data array
                           nth11,nth22  - range of levels (1,256)
                           sth11,sth22  - corresponding array values
   
        n.b.   uses rectangle fills with pre-assigned
               colours, use ldcolor or equivalent to set up colours


I. ROUTINES USING POSTSCRIPT FONTS
==================================


TYPSET  (X)  call typset (xb0,yb0)
------
	FUNCTION:  allows shift of origin for typstr or typnum output

	ARGUMENT:  xb0,yb0 - origin in plotter units


ZPICK  (X)  call zpick (ifont)
-----
	FUNCTION:  Select a Postscript font

	ARGUMENT:  IFONT =
                           1      Helvetica
                           2      Helvetica-Bold
                           3      Palatino-Roman
                           4      Times-Roman
                           5      Helvetica-Oblique
                           6      Palatino-Italic
                           7      Times-Italic
                           8      Times-Bold
                           9      Times-BoldItalic
                           10     Symbol
                           11     Palatino-Bold
                           12     Palatino-BoldItalic
                           13     Lucida Sans
                           14     LucidaSans-Italic
                           15     LucidaSans-Bold
                           16     LucidaSans-BoldItalic
                           17     Helvetica-BoldOblique

	COMMENTS:  Fonts are initialised in HPLOTS

ZFONT    call zfont (FF,FS
-----
	FUNCTION:  Select a Postscript font by Family and Style

	ARGUMENT:  FF  Font Famil
                     HE   Helvetica
                     LS   LucidaSans
                     TI   Times
                     PA   Palatino
                     SY   Symbol
                  FS  Font Style
                     RO   Roman
                     IT   Italic
                     BO   Bold
                     BI   BoldItalic


TYPSTR  (X)  call typstr (X, Y, SIZE, CWORD ANGL, NCHAR)
------
        FUNCTION: Plots ASCII character string: with font selected	
		  by ZPICK
                   
        ARGUMENTS: X, Y - starting point in plotter coordinates.
                   SIZE - absolute value is height of character(s).
                        < 0 (X, Y) is location in cm relative to current pen 
                            location
                        > 0 (X, Y) is in absolute plotter units
                   CWORD - character string to be plotted.
                   ANGL - string orientation (in degrees) relative to X axis.
                   NCHAR - number of characters to be plotted (maximum = 77).

TYPNUM  (X)  call typnum (X, Y, SIZE, RN, ANGL, NDE)
------
        FUNCTION: Plots a real number: in font selected by ZPICK

        ARGUMENTS: X, Y - starting point in plotter coordinates.
                   SIZE - absolute value is height of character(s).
                   ANGL - string orientation (in degrees) relative to X axis. 
                   RN - real number to be plotted.
                   NDE - integer format parameter.
                        < 0 RN is plotted as an integer 
                        > 0 NDE specify number of decimals

TYPCHR    call typchr (X, Y, SIZE, KWORD, J1, J2)
------
        FUNCTION: Plots a segement of a character string: in font selected by ZPICK

        ARGUMENTS: X, Y - starting point in plotter coordinates.
                   SIZE - absolute value is height of character(s).
                   KWORD - character string 
                   J1,J2 - beginning,end of string segment


J ROUTINES extending Plotpak Capabilities
=========================================

These routines are devised from the Japanese version of the Plotpak
library (courtesy of T. Shibutani) - DO NOT USE WITH ROTATION

PEXTEND     call pextend
-------
            adds Postscript operator definitions for extensions

ORIGIN      call origin(x,y,iorig)
------
            shifts origin 
             iorig = 0 , set origin to x,y
                   = 1 , shift origin by x,y

CELLSIZE     call cellsize (dx,dy)
--------
             sets cell size

FCELL        call fcell (x,y,dx,dy,col)
-----
             paint cell in colour
             x,y     centre of cell
             dx,dy   cell sides
             col     hue (<1.)

FCELLG        call fcellg (x,y,dx,dy,col)
------
             paint cell in grey
             x,y     centre of cell
             dx,dy   cell sides
             col     greytone (<1.)

PLUS         call plus (x,y)
-----
             draw plus symbol at x,y

SQR          call sqr (x,y)
---
             draw square symbol at x,y

TRI          call tri (x,y)
---
             draw triangle symbol at x,y

STAR         call star (x,y)
----
             draw star symbol at x,y

ARC          call arc (x,y,rad,ang1,ang2)
---
             draw arc (counterclockwise)
             centre x,y,radius rad, angle range (in deg) ang1-ang2

ARCN         call arcn (x,y,rad,ang1,ang2)
----
             draw arc (clockwise)
             centre x,y,radius rad, angle range (in deg) ang1-ang2

CCIRCF       call ccircf (x,y,rad)
-------
             draw filled circle centre x,y,radius rad

CCIRC        call ccirc (x,y,rad)
-----
             draw circle centre x,y,radius rad



_____________________________________________________________________________

SUMMARY LIST OF RPOSTPAK GRAPHICS ROUTINES  (version 2.1)
*********************************************************


A. PLOT INITIALIZATION AND TERMINATION

HPLOTS (X) Initializes and terminates plotting.

NEWPAGE    Start new page

NEWPLOT    Start new plot object


B. ROUTINES to use Postscript basic commands

QROTATE     Rotate plot (angle in degrees)

QTRANSL     Translate plot (in points)

QSCALE      Scale plot

QSETLW      Setlinewidth (in points)


C. ROUTINES affecting COLOUR and DRAWING STYLE

DASHLN (X)  Select style of plotted line segment

THICKLIN    Select line thickness

PEN (X)     Select pen
 
COLINT      Setup pens 1-31

LDCOLOR (X) Define additional pens

RGBCOL      Define pen in rgb convention

HSBCOL      Define pen by hue, saturation and brightness

GREYTON     Define pen by greytone


D. BASIC PLOT ROUTINES

PLOT (X)    Moves pen to specified position on paper.

PLOTU (X)   As above but with coordinates in user specified units.

SCALE (X)   Determines parameters for transformation from user coordinates 
            to plotter coordinates.


E. CIRCLES AND SYMBOLS

CIRCLE (X)  Draws regular polygon with NSIDES centered at current pen location.

CSYMBL (X)  Draws a centered symbol around a specified point.


F. SIMPLE ANNOTATION - base font (Helvetica)

NUMBER (X)  Plots a real number. 

SYMBOL (X)  Plots ASCII character string.

SYMBU (X)   As above but with coordinates in user specified units.


G. ROUTINES FOR SHAPES

FILLTYP (X) Specifies fill type for shading.

SHADRT (X)  Shades an incremental rectangle 

EDGERT (X)  Outlines an incremental rectangle

FILLPOLY    Fills a closed polygon

EDGPOLY     Outlines a closed polygon

H. ROUTINES FOR PIXEL IMAGES

For all these routines the array arr is supposed to be organised so that
the columns proceed down the page.

PIMAG4      Grey tone bitmap plot (4 bit)  16-tones

PIMAG8      Grey tone bitmap plot (8 bit) 256-tones

PIMASK      Uses imagemask facility to allow overlaid
	    plotting of different bit patterns

PIMCOL8     Color pixel plotting using colorimage command (8 bit)

PICOL       Color pixel plotting using rectangle fill


I. ROUTINES USING POSTSCRIPT FONTS

TYPSET  (X)  allows shift of origin for typstr or typnum output

ZPICK  (X)   Select a Postscript font

ZFONT        Select a Postscript font by Family and Style

TYPSTR  (X)   Plots character string: with font selected by ZPICK or ZFONT

TYPNUM  (X)   Plots a real number: in font selected by ZPICK or ZFONT
              (convention for format slighlty different to NUMBER)

TYPCHR        Plots part of a character string 


J ROUTINES extending Plotpak Capabilities

These routines are devised from the Japanese version of the Plotpak
library (courtesy of T. Shibutani) - DO NOT USE WITH ROTATION

PEXTEND      adds Postscript operator definitions for extensions

ORIGIN       shifts origin 

CELLSIZE     sets cell size
FCELL        paint cell in colour
FCELLG       paint cell in grey

PLUS         draw plus symbol
SQR          draw square symbol 
TRI          draw triangle symbol 
STAR         draw star symbol 

ARC          draw arc 
ARCN         draw arc (clockwise)

CCIRCF       draw filled circle 
CCIRC        draw circle centre 

